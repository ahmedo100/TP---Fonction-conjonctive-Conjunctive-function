Hello from c:\Users\suf\.vscode\extensions\jaredly.reason-vscode-1.3.0\bin.native.exe.hot.exe
Previous log location: C:\Users\suf\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","refmt":"","lispRefmt":"","format_width":"80","per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/suf/Desktop/Etd/tp1/prop_def.ml","languageId":"ocaml","version":1,"text":"exception EndSession;;\nexception LexError;;\nexception EOF;;\ntype proposition = \nVrai\n  |Faux\n  |Var of string \n  | ET of proposition * proposition\n  | NEG of proposition \n  | OU of proposition * proposition\n  |IMPLIQ of proposition * proposition\n;;\n\n\nlet lines = ref 0;;\nlet words = ref 0;;\n\n\nlet rec print_term  term =\n\nmatch term with\n\n(Var x) ->  print_string x\n|Vrai ->      print_string \"vrai\";\n|Faux  ->     print_string \"faux\";\n|OU(x,y) ->   (\n             print_string \"(\";\n             print_term x;\n             print_string \"#\";\n             print_term y;\n             print_string \")\"; )\n             \n|ET(x,y)      ->  \n             (\n             print_string \"(\"; \n             print_term x;\n             print_string \"&\";\n             print_term y;\n             print_string \")\"; )\n             \n|IMPLIQ(x,y) -> \n               (\n             print_string \"(\"; \n             print_term x;\n             print_string \"->\";\n             print_term y;\n             print_string \")\";\n                )\n             \n|NEG x   -> (print_string \"~\"; print_term x)\n;;\n\n"}}}
